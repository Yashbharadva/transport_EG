{"ast":null,"code":"'use strict';\n\nvar ToObject = require('es-abstract/2021/ToObject');\nvar ToLength = require('es-abstract/2021/ToLength');\nvar IsCallable = require('es-abstract/2021/IsCallable');\nmodule.exports = function find(predicate) {\n  var list = ToObject(this);\n  var length = ToLength(list.length);\n  if (!IsCallable(predicate)) {\n    throw new TypeError('Array#find: predicate must be a function');\n  }\n  if (length === 0) {\n    return void 0;\n  }\n  var thisArg;\n  if (arguments.length > 0) {\n    thisArg = arguments[1];\n  }\n  for (var i = 0, value; i < length; i++) {\n    value = list[i];\n    // inlined for performance: if (Call(predicate, thisArg, [value, i, list])) {\n    if (predicate.apply(thisArg, [value, i, list])) {\n      return value;\n    }\n  }\n  return void 0;\n};","map":null,"metadata":{},"sourceType":"script"}