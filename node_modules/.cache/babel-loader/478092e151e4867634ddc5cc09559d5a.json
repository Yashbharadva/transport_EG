{"ast":null,"code":"/* global window:true */\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from 'Reducers/';\nimport sagasManager from 'Utils/sagasManager';\nvar sagaMiddleware = createSagaMiddleware();\nvar isProduction = process.env.NODE_ENV === 'production';\nvar composeEnhancers = compose;\nif (!isProduction && window) {\n  composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n}\nexport default function configureStore(initialState) {\n  var finalCreateStore = composeEnhancers(applyMiddleware(sagaMiddleware))(createStore);\n  var store = finalCreateStore(reducer, initialState);\n\n  // configStorage();\n  sagaMiddleware.run(sagasManager.getRootSaga());\n  if (!isProduction && module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers/', function () {\n      var nextReducer = reducer;\n      store.replaceReducer(nextReducer);\n    });\n  }\n  return store;\n}","map":{"version":3,"names":["createStore","applyMiddleware","compose","createSagaMiddleware","reducer","sagasManager","sagaMiddleware","isProduction","process","env","NODE_ENV","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","initialState","finalCreateStore","store","run","getRootSaga","module","hot","accept","nextReducer","replaceReducer"],"sources":["/Volumes/DATA/Yash/Projects/contracting zip/src/store/ConfigureStore.js"],"sourcesContent":["/* global window:true */\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducer from 'Reducers/';\nimport sagasManager from 'Utils/sagasManager';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst isProduction = process.env.NODE_ENV === 'production';\nlet composeEnhancers = compose;\n\nif (!isProduction && window) {\n  composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n}\n\nexport default function configureStore(initialState) {\n  let finalCreateStore = composeEnhancers(applyMiddleware(sagaMiddleware))(\n    createStore\n  );\n\n  const store = finalCreateStore(reducer, initialState);\n\n  // configStorage();\n  sagaMiddleware.run(sagasManager.getRootSaga());\n\n  if (!isProduction && module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers/', () => {\n      const nextReducer = reducer;\n      store.replaceReducer(nextReducer);\n    });\n  }\n  return store;\n}\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAC7D,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,YAAY,MAAM,oBAAoB;AAE7C,IAAMC,cAAc,GAAGH,oBAAoB,EAAE;AAC7C,IAAMI,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;AAC1D,IAAIC,gBAAgB,GAAGT,OAAO;AAE9B,IAAI,CAACK,YAAY,IAAIK,MAAM,EAAE;EAC3BD,gBAAgB,GAAGC,MAAM,CAACC,oCAAoC,IAAIX,OAAO;AAC3E;AAEA,eAAe,SAASY,cAAc,CAACC,YAAY,EAAE;EACnD,IAAIC,gBAAgB,GAAGL,gBAAgB,CAACV,eAAe,CAACK,cAAc,CAAC,CAAC,CACtEN,WAAW,CACZ;EAED,IAAMiB,KAAK,GAAGD,gBAAgB,CAACZ,OAAO,EAAEW,YAAY,CAAC;;EAErD;EACAT,cAAc,CAACY,GAAG,CAACb,YAAY,CAACc,WAAW,EAAE,CAAC;EAE9C,IAAI,CAACZ,YAAY,IAAIa,MAAM,CAACC,GAAG,EAAE;IAC/B;IACAD,MAAM,CAACC,GAAG,CAACC,MAAM,CAAC,cAAc,EAAE,YAAM;MACtC,IAAMC,WAAW,GAAGnB,OAAO;MAC3Ba,KAAK,CAACO,cAAc,CAACD,WAAW,CAAC;IACnC,CAAC,CAAC;EACJ;EACA,OAAON,KAAK;AACd"},"metadata":{},"sourceType":"module"}