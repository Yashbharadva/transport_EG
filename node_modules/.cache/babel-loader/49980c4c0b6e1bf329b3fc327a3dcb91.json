{"ast":null,"code":"import _objectSpread from \"/Volumes/DATA/Yash/Projects/contracting zip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_GROUPS_AND_TRANSPORTERS_SUCCESS, GET_PACKING_TYPES_SUCCESS, GET_VEHICLE_TYPES_SUCCESS, GET_VEHICLE_BODY_TYPES_SUCCESS, GET_PAYMENT_CYCLES_SUCCESS, GET_PRICING_BASIS_SUCCESS, GET_PRODUCT_CATEGORIES_SUCCESS, GET_BUSINESS_VOLUMES_SUCCESS, GET_SLABS_SUCCESS, GET_GROUPS_SUCCESS, GET_TRANSPORTERS_SUCCESS, GET_HOLISTICS_SUCCESS, GET_HOLISTICS_SUBMITTING, GET_BRANCHES_DATA, GET_REPORTS, GET_SECONDARY_TO_LOCATION_SUCCESS, SAVE_SECONDARY_UPTO_KM_LIST, GET_MOVEMENTS_SUCCESS, GET_MODES_SUCCESS, GET_ZONES_SUCCESS, SAVE_COURIER_SLABS, CURRENCY_DETAILS_SUCCESS, SAVE_RFQ_TYPES, MARKET_REPORT_LOCATIONS_DATA, SAVE_YARD_TO_YRAD_CONSTANTS_LIST, SAVE_MULTI_MODE_CONTAINER_LIST, SAVE_MULTI_MODE_MOVEMENT_TYPE_LIST, SAVE_PLANT_LOCATION_LIST, SAVE_DEPOT_LOCATION_LIST, SAVE_CHA_LIST, SAVE_CURRENCY_TYPES, SAVE_INCOTERMS_LIST, SAVE_COST_HEADS_LIST, GET_UPLOAD_PLAN_DATA, GET_CONSIGNEE_DATA, DOWNLOAD_UPLOADPLAN_TEMPLATE, SAVE_GOOGLE_STUDIO_REPORT, SAVE_SELECTED_BRANCH_DETAILS, GET_FUEL_TYPES_SUCCESS, SAVE_SPOT_CONTRACT_REASONS, SAVE_SEA_AND_AIR_LINES_LIST } from 'Constants/actionConstants';\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    groups: [],\n    transporters: [],\n    packingTypes: [],\n    vehicleTypes: [],\n    vehicleBodyTypes: [],\n    paymentCycles: [],\n    pricingBasis: [],\n    businessVolumes: [],\n    slabs: [],\n    productCategories: [],\n    holistics: {\n      dataSubmitting: false,\n      token: \"\",\n      embedCode: \"53778f4aa0b1f4a45cf97c60\"\n    },\n    branchesList: [],\n    secondaryToLocations: [],\n    secondaryUpToKmList: [],\n    courierMovements: [],\n    courierModes: [],\n    courierZones: [],\n    courierSlabs: [],\n    currencyDetails: [],\n    rfqTypes: [],\n    reportsTabs: [],\n    reportLocations: {},\n    YardToYardConstants: {},\n    chaList: [],\n    currencyTypes: [],\n    uploadPlans: [],\n    consigneeList: [],\n    downloadUPTemp: [],\n    googleStudioReport: {},\n    incotermsList: [],\n    costHeadList: [],\n    selectedNavBranch: {},\n    fuelTypes: [],\n    spotContractReasons: [],\n    seaAndAirLines: {}\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var newState;\n  if (action.type === GET_GROUPS_AND_TRANSPORTERS_SUCCESS) {\n    newState = _objectSpread({}, state, {\n      groups: action.groups,\n      transporters: action.transporters\n    });\n  } else if (action.type === GET_PACKING_TYPES_SUCCESS) {\n    newState = _objectSpread({}, state, {\n      packingTypes: action.data\n    });\n  } else if (action.type === GET_VEHICLE_TYPES_SUCCESS) {\n    newState = _objectSpread({}, state, {\n      vehicleTypes: action.data\n    });\n  } else if (action.type === GET_VEHICLE_BODY_TYPES_SUCCESS) {\n    newState = _objectSpread({}, state, {\n      vehicleBodyTypes: action.data\n    });\n  } else if (action.type === GET_PAYMENT_CYCLES_SUCCESS) {\n    newState = _objectSpread({}, state, {\n      paymentCycles: action.data\n    });\n  } else if (action.type === GET_PRICING_BASIS_SUCCESS) {\n    newState = _objectSpread({}, state, {\n      pricingBasis: action.data\n    });\n  } else if (action.type === GET_PRODUCT_CATEGORIES_SUCCESS) {\n    newState = _objectSpread({}, state, {\n      productCategories: action.data\n    });\n  } else if (action.type === GET_BUSINESS_VOLUMES_SUCCESS) {\n    newState = _objectSpread({}, state, {\n      businessVolumes: action.data\n    });\n  } else if (action.type === GET_SLABS_SUCCESS) {\n    newState = _objectSpread({}, state, {\n      slabs: action.data\n    });\n  } else if (action.type === GET_GROUPS_SUCCESS) {\n    newState = _objectSpread({}, state, {\n      groups: action.groups\n    });\n  } else if (action.type === GET_TRANSPORTERS_SUCCESS) {\n    newState = _objectSpread({}, state, {\n      transporters: action.transporters\n    });\n  } else if (action.type === GET_HOLISTICS_SUBMITTING) {\n    newState = _objectSpread({}, state, {\n      holistics: _objectSpread({}, state.holistics, {\n        dataSubmitting: true\n      })\n    });\n  } else if (action.type === GET_HOLISTICS_SUCCESS) {\n    newState = _objectSpread({}, state, {\n      holistics: _objectSpread({}, state.holistics, {\n        dataSubmitting: false,\n        token: action.token,\n        embedCode: action.embedCode ? action.embedCode : \"53778f4aa0b1f4a45cf97c60\"\n      })\n    });\n  } else if (action.type === GET_REPORTS) {\n    newState = _objectSpread({}, state, {\n      holistics: _objectSpread({}, state.holistics, {\n        dataSubmitting: false,\n        token: action.token,\n        embedCode: action.embedCode\n      })\n    });\n    if (action.reportsTabs) {\n      newState.reportsTabs = action.reportsTabs;\n      (action.reportsTabs || []).map(function (el, index) {\n        if (!el.id) {\n          el.id = index + 1;\n        }\n        el.value = el.report_name;\n      });\n    }\n  } else if (action.type === GET_BRANCHES_DATA) {\n    var branchArr = (action.data.list || []).map(function (branch) {\n      return {\n        value: branch.branch_id,\n        label: branch.branch_name\n      };\n    });\n    newState = _objectSpread({}, state, {\n      branchesList: branchArr\n    });\n  } else if (action.type === GET_SECONDARY_TO_LOCATION_SUCCESS) {\n    newState = _objectSpread({}, state, {\n      secondaryToLocations: action.data\n    });\n  } else if (action.type === SAVE_SECONDARY_UPTO_KM_LIST) {\n    newState = _objectSpread({}, state, {\n      secondaryUpToKmList: action.data || []\n    });\n  } else if (action.type === GET_MOVEMENTS_SUCCESS) {\n    newState = _objectSpread({}, state, {\n      courierMovements: action.data\n    });\n  } else if (action.type === GET_MODES_SUCCESS) {\n    newState = _objectSpread({}, state, {\n      courierModes: action.data\n    });\n  } else if (action.type === GET_ZONES_SUCCESS) {\n    newState = _objectSpread({}, state, {\n      courierZones: action.data || []\n    });\n  } else if (action.type === SAVE_COURIER_SLABS) {\n    newState = _objectSpread({}, state, {\n      courierSlabs: action.data || []\n    });\n  } else if (action.type === CURRENCY_DETAILS_SUCCESS) {\n    newState = _objectSpread({}, state, {\n      currencyDetails: action.data || []\n    });\n  } else if (action.type === SAVE_RFQ_TYPES) {\n    newState = _objectSpread({}, state, {\n      rfqTypes: action.data || []\n    });\n  } else if (action.type === MARKET_REPORT_LOCATIONS_DATA) {\n    newState = _objectSpread({}, state, {\n      reportLocations: action.data\n    });\n  } else if (action.type === SAVE_YARD_TO_YRAD_CONSTANTS_LIST) {\n    newState = _objectSpread({}, state, {\n      YardToYardConstants: action.data\n    });\n  } else if (action.type === SAVE_MULTI_MODE_CONTAINER_LIST) {\n    newState = _objectSpread({}, state, {\n      containerTypes: action.data || []\n    });\n  } else if (action.type === SAVE_MULTI_MODE_MOVEMENT_TYPE_LIST) {\n    newState = _objectSpread({}, state, {\n      multiModalMovementTypes: action.data || []\n    });\n  } else if (action.type === SAVE_PLANT_LOCATION_LIST) {\n    newState = _objectSpread({}, state, {\n      plantLocationList: action.data || []\n    });\n  } else if (action.type === SAVE_DEPOT_LOCATION_LIST) {\n    newState = _objectSpread({}, state, {\n      depotLocationList: action.data || []\n    });\n  } else if (action.type === SAVE_CHA_LIST) {\n    newState = _objectSpread({}, state, {\n      chaList: action.data\n    });\n  } else if (action.type === SAVE_CURRENCY_TYPES) {\n    newState = _objectSpread({}, state, {\n      currencyTypes: action.data\n    });\n  } else if (action.type === GET_UPLOAD_PLAN_DATA) {\n    newState = _objectSpread({}, state, {\n      uploadPlans: action.data\n    });\n  } else if (action.type === GET_CONSIGNEE_DATA) {\n    newState = _objectSpread({}, state, {\n      consigneeList: action.data\n    });\n  } else if (action.type === DOWNLOAD_UPLOADPLAN_TEMPLATE) {\n    newState = _objectSpread({}, state, {\n      downloadUPTemp: action.data\n    });\n  } else if (action.type === SAVE_GOOGLE_STUDIO_REPORT) {\n    newState = _objectSpread({}, state, {\n      googleStudioReport: action.data\n    });\n  } else if (action.type === SAVE_INCOTERMS_LIST) {\n    newState = _objectSpread({}, state, {\n      incotermsList: action.data\n    });\n  } else if (action.type === SAVE_COST_HEADS_LIST) {\n    newState = _objectSpread({}, state, {\n      costHeadList: action.data\n    });\n  } else if (action.type === SAVE_SELECTED_BRANCH_DETAILS) {\n    newState = _objectSpread({}, state, {\n      selectedNavBranch: action.data || {}\n    });\n  } else if (action.type === GET_FUEL_TYPES_SUCCESS) {\n    newState = _objectSpread({}, state, {\n      fuelTypes: action.data\n    });\n  } else if (action.type === SAVE_SPOT_CONTRACT_REASONS) {\n    newState = _objectSpread({}, state, {\n      spotContractReasons: action.data || []\n    });\n  } else if (action.type === SAVE_SEA_AND_AIR_LINES_LIST) {\n    newState = _objectSpread({}, state, {\n      seaAndAirLines: action.data\n    });\n  }\n  return newState || state;\n});","map":{"version":3,"names":["GET_GROUPS_AND_TRANSPORTERS_SUCCESS","GET_PACKING_TYPES_SUCCESS","GET_VEHICLE_TYPES_SUCCESS","GET_VEHICLE_BODY_TYPES_SUCCESS","GET_PAYMENT_CYCLES_SUCCESS","GET_PRICING_BASIS_SUCCESS","GET_PRODUCT_CATEGORIES_SUCCESS","GET_BUSINESS_VOLUMES_SUCCESS","GET_SLABS_SUCCESS","GET_GROUPS_SUCCESS","GET_TRANSPORTERS_SUCCESS","GET_HOLISTICS_SUCCESS","GET_HOLISTICS_SUBMITTING","GET_BRANCHES_DATA","GET_REPORTS","GET_SECONDARY_TO_LOCATION_SUCCESS","SAVE_SECONDARY_UPTO_KM_LIST","GET_MOVEMENTS_SUCCESS","GET_MODES_SUCCESS","GET_ZONES_SUCCESS","SAVE_COURIER_SLABS","CURRENCY_DETAILS_SUCCESS","SAVE_RFQ_TYPES","MARKET_REPORT_LOCATIONS_DATA","SAVE_YARD_TO_YRAD_CONSTANTS_LIST","SAVE_MULTI_MODE_CONTAINER_LIST","SAVE_MULTI_MODE_MOVEMENT_TYPE_LIST","SAVE_PLANT_LOCATION_LIST","SAVE_DEPOT_LOCATION_LIST","SAVE_CHA_LIST","SAVE_CURRENCY_TYPES","SAVE_INCOTERMS_LIST","SAVE_COST_HEADS_LIST","GET_UPLOAD_PLAN_DATA","GET_CONSIGNEE_DATA","DOWNLOAD_UPLOADPLAN_TEMPLATE","SAVE_GOOGLE_STUDIO_REPORT","SAVE_SELECTED_BRANCH_DETAILS","GET_FUEL_TYPES_SUCCESS","SAVE_SPOT_CONTRACT_REASONS","SAVE_SEA_AND_AIR_LINES_LIST","state","groups","transporters","packingTypes","vehicleTypes","vehicleBodyTypes","paymentCycles","pricingBasis","businessVolumes","slabs","productCategories","holistics","dataSubmitting","token","embedCode","branchesList","secondaryToLocations","secondaryUpToKmList","courierMovements","courierModes","courierZones","courierSlabs","currencyDetails","rfqTypes","reportsTabs","reportLocations","YardToYardConstants","chaList","currencyTypes","uploadPlans","consigneeList","downloadUPTemp","googleStudioReport","incotermsList","costHeadList","selectedNavBranch","fuelTypes","spotContractReasons","seaAndAirLines","action","newState","type","data","map","el","index","id","value","report_name","branchArr","list","branch","branch_id","label","branch_name","containerTypes","multiModalMovementTypes","plantLocationList","depotLocationList"],"sources":["/Volumes/DATA/Yash/Projects/contracting zip/src/reducers/constants.js"],"sourcesContent":["import {\n   GET_GROUPS_AND_TRANSPORTERS_SUCCESS,\n\n   GET_PACKING_TYPES_SUCCESS,\n   GET_VEHICLE_TYPES_SUCCESS,\n   GET_VEHICLE_BODY_TYPES_SUCCESS,\n   GET_PAYMENT_CYCLES_SUCCESS,\n   GET_PRICING_BASIS_SUCCESS,\n   GET_PRODUCT_CATEGORIES_SUCCESS,\n   GET_BUSINESS_VOLUMES_SUCCESS,\n   GET_SLABS_SUCCESS,\n   GET_GROUPS_SUCCESS,\n   GET_TRANSPORTERS_SUCCESS,\n   GET_HOLISTICS_SUCCESS,\n   GET_HOLISTICS_SUBMITTING,\n   GET_BRANCHES_DATA,\n   GET_REPORTS,\n   GET_SECONDARY_TO_LOCATION_SUCCESS,\n   SAVE_SECONDARY_UPTO_KM_LIST,\n   GET_MOVEMENTS_SUCCESS,\n   GET_MODES_SUCCESS,\n   GET_ZONES_SUCCESS,\n   SAVE_COURIER_SLABS,\n   CURRENCY_DETAILS_SUCCESS,\n   SAVE_RFQ_TYPES,\n   MARKET_REPORT_LOCATIONS_DATA,\n   SAVE_YARD_TO_YRAD_CONSTANTS_LIST,\n   SAVE_MULTI_MODE_CONTAINER_LIST,\n   SAVE_MULTI_MODE_MOVEMENT_TYPE_LIST,\n   SAVE_PLANT_LOCATION_LIST,\n   SAVE_DEPOT_LOCATION_LIST,\n   SAVE_CHA_LIST,\n   SAVE_CURRENCY_TYPES,\n   SAVE_INCOTERMS_LIST,\n   SAVE_COST_HEADS_LIST,\n   GET_UPLOAD_PLAN_DATA,\n   GET_CONSIGNEE_DATA,\n   DOWNLOAD_UPLOADPLAN_TEMPLATE,\n   SAVE_GOOGLE_STUDIO_REPORT,\n   SAVE_SELECTED_BRANCH_DETAILS,\n   GET_FUEL_TYPES_SUCCESS,\n   SAVE_SPOT_CONTRACT_REASONS,\n   SAVE_SEA_AND_AIR_LINES_LIST\n} from 'Constants/actionConstants';\nexport default (state = {\n   groups: [],\n   transporters: [],\n   packingTypes: [],\n   vehicleTypes: [],\n   vehicleBodyTypes: [],\n   paymentCycles: [],\n   pricingBasis: [],\n   businessVolumes: [],\n   slabs: [],\n   productCategories: [],\n   holistics: {\n      dataSubmitting: false,\n      token: \"\",\n      embedCode: \"53778f4aa0b1f4a45cf97c60\"\n   },\n   branchesList: [],\n   secondaryToLocations: [],\n   secondaryUpToKmList: [],\n   courierMovements: [],\n   courierModes: [],\n   courierZones: [],\n   courierSlabs: [],\n   currencyDetails:[],\n   rfqTypes: [],\n   reportsTabs: [],\n   reportLocations: {},\n   YardToYardConstants: {},\n   chaList: [],\n   currencyTypes: [],\n   uploadPlans: [],\n   consigneeList: [],\n   downloadUPTemp: [],\n   googleStudioReport: {},\n   incotermsList: [],\n   costHeadList: [],\n   selectedNavBranch: {},\n   fuelTypes: [],\n   spotContractReasons: [],\n   seaAndAirLines: {}\n}, action) => {\n   let newState;\n\n   if (action.type === GET_GROUPS_AND_TRANSPORTERS_SUCCESS) {\n      newState = {\n         ...state,\n         groups: action.groups,\n         transporters: action.transporters\n      };\n   }\n\n   else if (action.type === GET_PACKING_TYPES_SUCCESS) {\n      newState = {\n         ...state,\n         packingTypes: action.data\n      };\n   }\n   else if (action.type === GET_VEHICLE_TYPES_SUCCESS) {\n      newState = {\n         ...state,\n         vehicleTypes: action.data\n      };\n   }\n   else if (action.type === GET_VEHICLE_BODY_TYPES_SUCCESS) {\n      newState = {\n         ...state,\n         vehicleBodyTypes: action.data\n      };\n   }\n   else if (action.type === GET_PAYMENT_CYCLES_SUCCESS) {\n      newState = {\n         ...state,\n         paymentCycles: action.data\n      };\n   }\n   else if (action.type === GET_PRICING_BASIS_SUCCESS) {\n      newState = {\n         ...state,\n         pricingBasis: action.data\n      };\n   }\n   else if (action.type === GET_PRODUCT_CATEGORIES_SUCCESS) {\n      newState = {\n         ...state,\n         productCategories: action.data\n      };\n   }\n   else if (action.type === GET_BUSINESS_VOLUMES_SUCCESS) {\n      newState = {\n         ...state,\n         businessVolumes: action.data\n      };\n   }\n   else if (action.type === GET_SLABS_SUCCESS) {\n      newState = {\n         ...state,\n         slabs: action.data\n      };\n   }\n   else if (action.type === GET_GROUPS_SUCCESS) {\n      newState = {\n         ...state,\n         groups: action.groups\n      };\n   }\n   else if (action.type === GET_TRANSPORTERS_SUCCESS) {\n      newState = {\n         ...state,\n         transporters: action.transporters\n      };\n   }\n   else if (action.type === GET_HOLISTICS_SUBMITTING) {\n      newState = {\n         ...state,\n         holistics: { ...state.holistics, dataSubmitting: true }\n      };\n   }\n   else if (action.type === GET_HOLISTICS_SUCCESS) {\n      newState = {\n         ...state,\n         holistics: {\n            ...state.holistics,\n            dataSubmitting: false,\n            token: action.token,\n            embedCode: action.embedCode ? action.embedCode : \"53778f4aa0b1f4a45cf97c60\"\n         }\n      };\n   }\n   else if (action.type === GET_REPORTS) {\n      newState = {\n         ...state,\n         holistics: {\n            ...state.holistics,\n            dataSubmitting: false,\n            token: action.token,\n            embedCode: action.embedCode,\n         }\n      };\n      if (action.reportsTabs) {\n         newState.reportsTabs = action.reportsTabs;\n         (action.reportsTabs || []).map((el, index) => { \n            if (!el.id) {\n               el.id = index+1; \n            }\n            el.value = el.report_name;\n         });\n      }\n   }\n   else if (action.type === GET_BRANCHES_DATA) {\n      const branchArr = (action.data.list || []).map((branch) => {\n         return {\n            value: branch.branch_id,\n            label: branch.branch_name\n         };\n      });\n      newState = {\n         ...state,\n         branchesList: branchArr,\n      }\n   }\n   else if (action.type === GET_SECONDARY_TO_LOCATION_SUCCESS) {\n      newState = {\n         ...state,\n         secondaryToLocations: action.data\n      };\n   }\n   else if (action.type === SAVE_SECONDARY_UPTO_KM_LIST) {\n      newState = {\n         ...state,\n         secondaryUpToKmList: action.data || []\n      }\n   }\n   else if (action.type === GET_MOVEMENTS_SUCCESS) {\n      newState = {\n         ...state,\n         courierMovements: action.data\n      };\n   }\n   else if (action.type === GET_MODES_SUCCESS) {\n      newState = {\n         ...state,\n         courierModes: action.data\n      };\n\n   }\n   else if (action.type === GET_ZONES_SUCCESS) {\n      newState = {\n         ...state,\n         courierZones: action.data || []\n      };\n   }\n   else if(action.type === SAVE_COURIER_SLABS) {\n      newState = {\n         ...state,\n         courierSlabs: action.data || []\n      };\n   }\n\telse if (action.type === CURRENCY_DETAILS_SUCCESS) {\n\t\tnewState = {\n\t\t\t...state,\n\t\t\tcurrencyDetails: action.data || []\n\t\t};\n   }\n   else if(action.type === SAVE_RFQ_TYPES) {\n      newState = {\n\t\t\t...state,\n\t\t\trfqTypes: action.data || []\n\t\t};\n   }\n   else if(action.type === MARKET_REPORT_LOCATIONS_DATA) {\n      newState = {\n         ...state,\n         reportLocations: action.data\n      };\n   }\n   else if(action.type === SAVE_YARD_TO_YRAD_CONSTANTS_LIST) {\n      newState = {\n         ...state,\n         YardToYardConstants: action.data\n      };\n   }\n   else if(action.type === SAVE_MULTI_MODE_CONTAINER_LIST) {\n      newState = {\n         ...state,\n         containerTypes: action.data || []\n      };\n   }\n   else if(action.type === SAVE_MULTI_MODE_MOVEMENT_TYPE_LIST) {\n      newState = {\n         ...state,\n         multiModalMovementTypes: action.data || []\n      };\n   }\n   else if(action.type === SAVE_PLANT_LOCATION_LIST) {\n      newState = {\n         ...state,\n         plantLocationList: action.data || []\n      };\n   }\n   else if(action.type === SAVE_DEPOT_LOCATION_LIST) {\n      newState = {\n         ...state,\n         depotLocationList: action.data || []\n      };\n   }\n   else if(action.type === SAVE_CHA_LIST) {\n      newState = {\n         ...state,\n         chaList: action.data\n      }\n   }\n   else if(action.type === SAVE_CURRENCY_TYPES) {\n      newState = {\n         ...state,\n         currencyTypes: action.data\n      }\n   }\n   else if(action.type === GET_UPLOAD_PLAN_DATA){\n      newState = {\n         ...state,\n         uploadPlans: action.data\n      }\n   }else if(action.type === GET_CONSIGNEE_DATA){\n      newState = {\n         ...state,\n         consigneeList: action.data\n      }\n   }else if(action.type === DOWNLOAD_UPLOADPLAN_TEMPLATE){\n      newState = {\n         ...state,\n         downloadUPTemp: action.data\n      }\n   }else if(action.type === SAVE_GOOGLE_STUDIO_REPORT) {\n      newState = {\n          ...state,\n          googleStudioReport: action.data,\n      };\n   }else if(action.type === SAVE_INCOTERMS_LIST) {\n      newState = {\n         ...state,\n         incotermsList: action.data\n      }\n   } else if(action.type === SAVE_COST_HEADS_LIST) {\n        newState = {\n           ...state,\n           costHeadList: action.data\n        }\n   }\n   else if(action.type === SAVE_SELECTED_BRANCH_DETAILS) {\n      newState = {\n         ...state,\n         selectedNavBranch: action.data || {}\n      }\n   } else if (action.type === GET_FUEL_TYPES_SUCCESS) {\n      newState = {\n         ...state,\n         fuelTypes: action.data\n      };\n   } else if(action.type === SAVE_SPOT_CONTRACT_REASONS) {\n      newState = {\n         ...state,\n         spotContractReasons: action.data || []\n      };\n   } else if(action.type === SAVE_SEA_AND_AIR_LINES_LIST) {\n      newState = {\n         ...state,\n         seaAndAirLines: action.data\n      }\n   }\n   return newState || state;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}