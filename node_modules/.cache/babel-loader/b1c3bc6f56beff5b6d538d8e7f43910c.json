{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar CreateDataProperty = require('./CreateDataProperty');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar Type = require('./Type');\n\n// // https://ecma-international.org/ecma-262/6.0/#sec-createdatapropertyorthrow\n\nmodule.exports = function CreateDataPropertyOrThrow(O, P, V) {\n  if (Type(O) !== 'Object') {\n    throw new $TypeError('Assertion failed: Type(O) is not Object');\n  }\n  if (!IsPropertyKey(P)) {\n    throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n  }\n  var success = CreateDataProperty(O, P, V);\n  if (!success) {\n    throw new $TypeError('unable to create data property');\n  }\n  return success;\n};","map":null,"metadata":{},"sourceType":"script"}