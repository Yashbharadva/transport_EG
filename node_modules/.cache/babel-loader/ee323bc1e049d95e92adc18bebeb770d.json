{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _propTypes = require(\"prop-types\");\nvar _wrapValidator = _interopRequireDefault(require(\"./helpers/wrapValidator\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nvar validNumericChars = /^[-+]?(?:[1-9][0-9]*(?:\\.[0-9]+)?|0|0\\.[0-9]+)$/;\nvar validator = function numericString(props, propName, componentName) {\n  if (props[propName] == null) {\n    return null;\n  }\n  for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    rest[_key - 3] = arguments[_key];\n  }\n  var stringError = _propTypes.string.apply(void 0, [props, propName, componentName].concat(rest));\n  if (stringError) {\n    return stringError;\n  }\n  var value = props[propName];\n  var passesRegex = validNumericChars.test(value);\n  if (passesRegex) {\n    return null;\n  }\n  return new TypeError(\"\".concat(componentName, \": prop \\\"\").concat(propName, \"\\\" (value \\\"\").concat(value, \"\\\") must be a numeric string:\\n    - starting with an optional + or -\\n    - that does not have a leading zero\\n    - with an optional decimal part (that contains only one decimal point, if present)\\n    - that otherwise only contains digits (0-9)\\n    - not +-NaN, or +-Infinity\\n  \"));\n};\nvalidator.isRequired = function numericStringRequired(props, propName, componentName) {\n  if (props[propName] == null) {\n    return new TypeError(\"\".concat(componentName, \": \").concat(propName, \" is required\"));\n  }\n  for (var _len2 = arguments.length, rest = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n    rest[_key2 - 3] = arguments[_key2];\n  }\n  return validator.apply(void 0, [props, propName, componentName].concat(rest));\n};\nvar _default = function _default() {\n  return (0, _wrapValidator[\"default\"])(validator, 'numericString');\n};\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}